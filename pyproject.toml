[tool.poetry]
name = "simpeg-drivers"
version = "0.1.0-alpha.1"
description = "My application"
authors = ["Mira Geoscience <support@mirageoscience.com>"]
packages = [
     { include = "simpeg_drivers" },
     { include = "simpeg_drivers-assets" },
]

[tool.poetry.dependencies]
python = "^3.10, <3.11"
numpy = "~1.23.5" # also geoh5py, simpeg and geoana
scipy = "~1.10.1"
discretize = {version = "~0.10.0"}

## pip dependencies
geoh5py = {version = "~0.9.0-alpha.2", source = "pypi", allow-prereleases = true}
#geoh5py = {url = "https://github.com/MiraGeoscience/geoh5py/archive/refs/tags/v0.8.0-rc.2.zip#sha256="}
octree-creation-app = {version = "~0.1.0a3", source = "pypi", allow-prereleases = true}
#octree-creation-app = {url = "https://github.com/MiraGeoscience/octree-creation-app/archive/refs/heads/develop.zip#sha256="}
#geoapps-utils = {url = "https://github.com/MiraGeoscience/geoapps-utils/archive/refs/heads/GEOPY-488.zip#sha256="}
geoapps-utils = {version = "~0.3.0a2", source = "pypi", allow-prereleases = true}
#mira-simpeg = {url = "https://github.com/MiraGeoscience/simpeg/archive/refs/heads/release/v0.19.0.dev3+geoapps.0.11.0.zip#sha256=", optional = true}
mira-simpeg = {version = "~0.19.0.dev7", source = "pypi", optional = true}
param-sweeps = {version = "~0.1.7a1", source = "pypi", allow-prereleases = true}
#param-sweeps = {url = "https://github.com/MiraGeoscience/param-sweeps/archive/refs/heads/develop.zip#sha256="}

## indirect dependencies, forcing them here for installation through Conda not pip
dask = {version = "2022.10.*", extras = ["distributed"]}
distributed = {version = "2022.10.*"}  # because conda-lock doesn't take dask extras into account
geoana = {version = "~0.4.0"}  # from simpeg
h5py = "*" # from geoh5py
mkl = {version = "2022.*"}  # from simpeg
Pillow = "*" # from geoh5py
pydantic = {version = "~2.5.2", optional = true}
pydiso = {version = "~0.0.3", optional = true} # from simpeg
pymatsolver = {version = "~0.2.0", optional = true} # from simpeg
tqdm = {version = "^4.64.0", optional = true }
zarr = {version = "~2.14.2", optional = true} # from simpeg using Dask

## about pip dependencies
# to be specified to work with conda-lock
# - from PyPI: my_package = { version = "1.2.3", source = "pypi" }
# - from URL:
#   - for a tags:   my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/tags/VERSION_TAG.zip#sha256=" }
#   - for a branch: my_package = { url = "https://github.com/ORGANISATION/REPO/archive/refs/heads/BRANCH.zip#sha256=" }
# Note - conda-lock does not support the syntax: my_package = { git = ... }
#        while poetry2conda supports only { git = "...", tag = "..." }, and not { url = ... }

[tool.poetry.dev-dependencies]
Pygments = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
tomli = "*"
jupyter-book = "^0.13"
jupytext = "^1.14"

[tool.conda-lock]
platforms = ['win-64', 'linux-64']
channels = ['conda-forge']

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
scripts_are_modules = true
show_error_context = true
show_column_numbers = true
check_untyped_defs = true

plugins = [
#    'numpy.typing.mypy_plugin'
]

[tool.coverage.run]
branch = true
source = ["simpeg_drivers"]
omit = [
    "simpeg_drivers/commands/hello_world.py"
]

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "pass",
    "if TYPE_CHECKING",
    "pragma: no cover"
]

[tool.coverage.html]
skip_empty = true
skip_covered = true

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
