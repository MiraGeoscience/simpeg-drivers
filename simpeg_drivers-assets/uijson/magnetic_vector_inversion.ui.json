{
    "version": "0.2.0-alpha.1",
    "title": "Magnetic Vector (MVI) Inversion",
    "icon": "surveyairbornemagnetics",
    "documentation": "https://mirageoscience-simpeg-drivers.readthedocs-hosted.com/en/stable/intro.html",
    "conda_environment": "simpeg_drivers",
    "run_command": "simpeg_drivers.driver",
    "geoh5": "",
    "monitoring_directory": "",
    "workspace_geoh5": "",
    "inversion_type": "magnetic vector",
    "forward_only": false,
    "inducing_field_strength": {
        "min": 0.1,
        "max": 100000.0,
        "precision": 2,
        "lineEdit": false,
        "main": true,
        "group": "Inducing Field",
        "label": "Strength (nT)",
        "value": 50000.0
    },
    "inducing_field_inclination": {
        "min": -90.0,
        "max": 90.0,
        "precision": 2,
        "lineEdit": false,
        "main": true,
        "group": "Inducing Field",
        "label": "Inclination (deg)",
        "value": 90.0
    },
    "inducing_field_declination": {
        "min": -180.0,
        "max": 180.0,
        "precision": 2,
        "lineEdit": false,
        "main": true,
        "group": "Inducing Field",
        "label": "Declination (deg)",
        "value": 0.0
    },
    "data_object": {
        "main": true,
        "group": "Data",
        "label": "Object",
        "meshType": [
            "{202c5db1-a56d-4004-9cad-baafd8899406}",
            "{6a057fdc-b355-11e3-95be-fd84a7ffcb88}",
            "{f26feba3-aded-494b-b9e9-b2bbcbe298e1}",
            "{48f5054a-1c5c-4ca4-9048-80f36dc60a06}",
            "{b020a277-90e2-4cd7-84d6-612ee3f25051}",
            "{4b99204c-d133-4579-a916-a9c8b98cfccb}",
            "{028e4905-cc97-4dab-b1bf-d76f58b501b5}"
        ],
        "value": ""
    },
    "tmi_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "TMI (nT)",
        "parent": "data_object",
        "optional": true,
        "enabled": true,
        "value": ""
    },
    "tmi_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "tmi_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bx_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bx (nT)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bx_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bx_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "by_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "By (nT)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "by_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "by_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bz_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bz (nT)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bz_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bz_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bxx_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bxx (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bxx_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bxx_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bxy_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bxy (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bxy_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bxy_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bxz_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bxz (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bxz_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bxz_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "byy_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Byy (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "byy_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "byy_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "byz_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Byz (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "byz_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "byz_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "bzz_channel": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "label": "Bzz (nT/m)",
        "parent": "data_object",
        "optional": true,
        "enabled": false,
        "value": ""
    },
    "bzz_uncertainty": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Data",
        "main": true,
        "isValue": true,
        "label": "Uncertainty",
        "parent": "data_object",
        "dependency": "bzz_channel",
        "dependencyType": "enabled",
        "property": "",
        "value": 1.0
    },
    "mesh": {
        "group": "Mesh and models",
        "main": true,
        "label": "Mesh",
        "meshType": "{4ea87376-3ece-438b-bf12-3479733ded46}",
        "value": "",
        "tooltip": "Select a mesh for the inversion."
    },
    "starting_model": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Mesh and models",
        "main": true,
        "isValue": true,
        "parent": "mesh",
        "label": "Initial susceptibility (SI)",
        "property": "",
        "value": 0.0001
    },
    "reference_model": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "main": true,
        "dataType": "Float",
        "group": "Mesh and models",
        "isValue": true,
        "optional": true,
        "enabled": false,
        "parent": "mesh",
        "label": "Reference susceptibility (SI)",
        "property": "",
        "value": 0.0
    },
    "lower_bound": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "main": true,
        "dataType": "Float",
        "group": "Mesh and models",
        "isValue": true,
        "parent": "mesh",
        "label": "Lower bound (SI)",
        "property": "",
        "optional": true,
        "value": 0.0,
        "enabled": false
    },
    "upper_bound": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "main": true,
        "dataType": "Float",
        "group": "Mesh and models",
        "isValue": true,
        "parent": "mesh",
        "label": "Upper bound (SI)",
        "property": "",
        "optional": true,
        "value": 1.0,
        "enabled": false
    },
    "starting_inclination": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Mesh and models",
        "main": true,
        "isValue": true,
        "optional": true,
        "enabled": false,
        "parent": "mesh",
        "label": "Initial inclination (deg)",
        "property": "",
        "value": 0.0
    },
    "starting_declination": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Mesh and models",
        "main": true,
        "isValue": true,
        "optional": true,
        "enabled": false,
        "parent": "mesh",
        "label": "Initial declination (deg)",
        "property": "",
        "value": 0.0
    },
    "reference_inclination": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Mesh and models",
        "main": true,
        "isValue": true,
        "optional": true,
        "enabled": false,
        "label": "Reference inclination (deg)",
        "parent": "mesh",
        "property": "",
        "value": 0.0
    },
    "reference_declination": {
        "association": [
            "Cell",
            "Vertex"
        ],
        "dataType": "Float",
        "group": "Mesh and models",
        "main": true,
        "isValue": true,
        "optional": true,
        "enabled": false,
        "label": "Reference declination (deg)",
        "parent": "mesh",
        "property": "",
        "value": 0.0
    },
    "topography_object": {
        "main": true,
        "group": "Topography",
        "label": "Topography",
        "meshType": [
            "{202c5db1-a56d-4004-9cad-baafd8899406}",
            "{6a057fdc-b355-11e3-95be-fd84a7ffcb88}",
            "{f26feba3-aded-494b-b9e9-b2bbcbe298e1}",
            "{48f5054a-1c5c-4ca4-9048-80f36dc60a06}",
            "{b020a277-90e2-4cd7-84d6-612ee3f25051}"
        ],
        "value": "",
        "optional": true,
        "enabled": true,
        "tooltip": "Select a topography object to define the active cells for inversion."
    },
    "topography": {
        "association": [
            "Vertex",
            "Cell"
        ],
        "dataType": "Float",
        "group": "Topography",
        "main": true,
        "optional": true,
        "enabled": false,
        "label": "Elevation channel",
        "tooltip": "Set elevation from channel.  If not set the topography will be set from the geometry of the selected 'topography' object.",
        "parent": "topography_object",
        "dependency": "topography_object",
        "dependencyType": "enabled",
        "value": "",
        "verbose": 2
    },
    "active_model": {
        "association": "Cell",
        "dataType": [
            "Referenced",
            "Boolean",
            "Integer"
        ],
        "group": "Topography",
        "main": true,
        "enabled": false,
        "dependency": "topography_object",
        "dependencyType": "disabled",
        "label": "Active model",
        "tooltip": "Provide the active cell boolean model directly if topography not set.",
        "parent": "mesh",
        "value": ""
    },
    "output_tile_files": false,
    "inversion_style": "voxel",
    "alpha_s": {
        "min": 0.0,
        "group": "Regularization",
        "label": "Reference weight",
        "value": 1.0,
        "tooltip": "Constant ratio compared to other weights. Larger values result in models that remain close to the reference model",
        "dependency": "reference_model",
        "dependencyType": "enabled",
        "isValue": true,
        "parent": "mesh",
        "association": "Cell",
        "dataType": "Float",
        "property": "",
        "enabled": true
    },
    "length_scale_x": {
        "min": 0.0,
        "group": "Regularization",
        "label": "X-smoothness weight",
        "tooltip": "Larger values relative to other smoothness weights will result in x biased smoothness",
        "value": 1.0,
        "isValue": true,
        "parent": "mesh",
        "association": "Cell",
        "dataType": "Float",
        "property": "",
        "enabled": true
    },
    "length_scale_y": {
        "min": 0.0,
        "group": "Regularization",
        "label": "Y-smoothness weight",
        "tooltip": "Larger values relative to other smoothness weights will result in y biased smoothness",
        "value": 1.0,
        "isValue": true,
        "parent": "mesh",
        "association": "Cell",
        "dataType": "Float",
        "property": "",
        "enabled": true
    },
    "length_scale_z": {
        "min": 0.0,
        "group": "Regularization",
        "label": "Z-smoothness weight",
        "tooltip": "Larger values relative to other smoothness weights will result in z biased smoothess",
        "value": 1.0,
        "isValue": true,
        "parent": "mesh",
        "association": "Cell",
        "dataType": "Float",
        "property": "",
        "enabled": true
    },
    "s_norm": {
        "association": "Cell",
        "dataType": "Float",
        "group": "Sparse/blocky model",
        "label": "Smallness norm",
        "isValue": true,
        "parent": "mesh",
        "property": "",
        "value": 0.0,
        "min": 0.0,
        "max": 2.0,
        "precision": 2,
        "lineEdit": true,
        "enabled": true,
        "dependency": "reference_model",
        "dependencyType": "enabled",
        "tooltip": "Lp-norm used in the smallness term of the objective function."
    },
    "x_norm": {
        "association": "Cell",
        "dataType": "Float",
        "group": "Sparse/blocky model",
        "label": "X-smoothness norm",
        "isValue": true,
        "parent": "mesh",
        "property": "",
        "value": 2.0,
        "min": 0.0,
        "max": 2.0,
        "precision": 2,
        "lineEdit": false,
        "enabled": true,
        "tooltip": "Lp-norm used in the x-smoothness term of the objective function."
    },
    "y_norm": {
        "association": "Cell",
        "dataType": "Float",
        "group": "Sparse/blocky model",
        "label": "Y-smoothness norm",
        "isValue": true,
        "parent": "mesh",
        "property": "",
        "value": 2.0,
        "min": 0.0,
        "max": 2.0,
        "precision": 2,
        "lineEdit": false,
        "enabled": true,
        "tooltip": "Lp-norm used in the y-smoothness term of the objective function."
    },
    "z_norm": {
        "association": "Cell",
        "dataType": "Float",
        "group": "Sparse/blocky model",
        "label": "Z-smoothness norm",
        "isValue": true,
        "parent": "mesh",
        "property": "",
        "value": 2.0,
        "min": 0.0,
        "max": 2.0,
        "precision": 2,
        "lineEdit": false,
        "enabled": true,
        "tooltip": "Lp-norm used in the z-smoothness term of the objective function."
    },
    "gradient_type": {
        "choiceList": [
            "total",
            "components"
        ],
        "group": "Sparse/blocky model",
        "label": "Gradient type",
        "value": "total",
        "verbose": 3,
        "tooltip": "Choose whether the IRLS weights for regularization terms are updated using total or partial gradients."
    },
    "max_irls_iterations": {
        "min": 0,
        "group": "Sparse/blocky model",
        "label": "Maximum IRLS iterations",
        "tooltip": "Incomplete Re-weighted Least Squares iterations for non-L2 problems",
        "value": 25,
        "enabled": true,
        "verbose": 2
    },
    "starting_chi_factor": {
        "group": "Sparse/blocky model",
        "label": "IRLS start chi factor",
        "enabled": true,
        "value": 1.0,
        "tooltip": "This chi factor will be used to determine the misfit threshold after which IRLS iterations begin.",
        "verbose": 3
    },
    "beta_tol": {
        "group": "Update IRLS directive",
        "label": "Beta tolerance",
        "value": 0.5,
        "min": 0.0001,
        "verbose": 3,
        "visible": false
    },
    "prctile": {
        "group": "Update IRLS directive",
        "label": "Percentile",
        "value": 95,
        "max": 100,
        "min": 5,
        "verbose": 3,
        "visible": false
    },
    "chi_factor": {
        "min": 0.1,
        "max": 20.0,
        "precision": 1,
        "lineEdit": false,
        "group": "Cooling schedule/target",
        "label": "Chi factor",
        "value": 1.0,
        "enabled": true,
        "tooltip": "The global target data misfit value."
    },
    "auto_scale_misfits": {
        "group": "Cooling schedule/target",
        "label": "Auto-scale misfits",
        "value": true,
        "verbose": 3,
        "visible": true,
        "tooltip": "Whether to auto-scale misfits functions (tile, frequency, joint methods) based on chi-factor."
    },
    "initial_beta_ratio": {
        "min": 0.0,
        "precision": 2,
        "group": "Cooling schedule/target",
        "optional": true,
        "enabled": true,
        "label": "Initial beta ratio",
        "value": 100.0,
        "verbose": 2,
        "tooltip": "Estimate the trade-off parameter by scaling the ratio between the largest derivatives in the objective function gradients."
    },
    "initial_beta": {
        "min": 0.0,
        "group": "Cooling schedule/target",
        "optional": true,
        "enabled": false,
        "dependency": "initial_beta_ratio",
        "dependencyType": "disabled",
        "label": "Initial beta",
        "value": 1.0,
        "verbose": 2,
        "tooltip": "Trade-off parameter between data misfit and regularization."
    },
    "coolingFactor": {
        "group": "Cooling schedule/target",
        "label": "Beta cooling factor",
        "tooltip": "Each beta cooling step will be calculated by dividing the current beta by this factor.",
        "value": 2.0,
        "min": 1.1,
        "max": 100,
        "precision": 1,
        "lineEdit": false,
        "verbose": 2
    },
    "coolingRate": {
        "group": "Optimization",
        "label": "Iterations per beta",
        "value": 1,
        "min": 1,
        "LineEdit": false,
        "max": 10,
        "precision": 1,
        "verbose": 2,
        "enabled": true
    },
    "max_global_iterations": {
        "min": 1,
        "lineEdit": false,
        "group": "Optimization",
        "label": "Maximum iterations",
        "tooltip": "Number of L2 and IRLS iterations combined",
        "value": 50,
        "enabled": true
    },
    "max_line_search_iterations": {
        "group": "Optimization",
        "label": "Maximum number of line searches",
        "value": 20,
        "min": 1,
        "enabled": true,
        "verbose": 3,
        "tooltip": "Perform an Armijo backtracking linesearch for the provided number of iterations."
    },
    "max_cg_iterations": {
        "min": 0,
        "group": "Optimization",
        "label": "Maximum CG iterations",
        "value": 30,
        "enabled": true,
        "verbose": 2
    },
    "tol_cg": {
        "min": 0,
        "group": "Optimization",
        "label": "Conjugate gradient tolerance",
        "value": 0.0001,
        "enabled": true,
        "verbose": 3
    },
    "f_min_change": {
        "group": "Optimization",
        "label": "Minimum change in objective function",
        "value": 0.01,
        "min": 1e-06,
        "verbose": 3,
        "enabled": true,
        "tooltip": "Minimum decrease in regularization beyond which the IRLS procedure is deemed to have completed."
    },
    "sens_wts_threshold": {
        "group": "Update sensitivity weights directive",
        "tooltip": "Update sensitivity weight threshold",
        "label": "Threshold (%)",
        "value": 0.001,
        "max": 100.0,
        "min": 0.0,
        "precision": 3,
        "enabled": true,
        "verbose": 2
    },
    "every_iteration_bool": {
        "group": "Update sensitivity weights directive",
        "tooltip": "Update weights at every iteration",
        "label": "Every iteration",
        "value": false,
        "verbose": 2,
        "enabled": true
    },
    "save_sensitivities": {
        "group": "Update sensitivity weights directive",
        "label": "Save sensitivities",
        "tooltip": "Save the summed square row sensitivities to geoh5.",
        "value": false
    },
    "parallelized": {
        "group": "Compute",
        "label": "Use parallelization",
        "value": true,
        "visible": false
    },
    "n_cpu": {
        "min": 1,
        "group": "Compute",
        "dependency": "parallelized",
        "dependencyType": "enabled",
        "optional": true,
        "enabled": false,
        "label": "Number of CPUs",
        "value": 1,
        "visible": false
    },
    "tile_spatial": {
        "group": "Compute",
        "label": "Number of tiles",
        "parent": "data_object",
        "isValue": true,
        "property": "",
        "value": 1,
        "min": 1,
        "max": 1000,
        "verbose": 2,
        "tooltip": "Splits the objective function into spatial tiles for distributed computation using the Dask library."
    },
    "store_sensitivities": {
        "choiceList": [
            "disk",
            "ram"
        ],
        "group": "Compute",
        "label": "Storage device",
        "tooltip": "Use disk on a fast local SSD, and RAM elsewhere",
        "value": "ram"
    },
    "max_ram": "",
    "max_chunk_size": {
        "min": 0,
        "group": "Compute",
        "optional": true,
        "enabled": true,
        "label": "Maximum chunk size (Mb)",
        "value": 128,
        "verbose": 3,
        "visible": false,
        "tooltip": "Limit the chunk size used by Dask for distributed computation."
    },
    "chunk_by_rows": {
        "group": "Compute",
        "label": "Chunk by rows",
        "value": true,
        "verbose": 3,
        "visible": false
    },
    "out_group": {
        "label": "SimPEG group",
        "value": "",
        "groupType": "{55ed3daf-c192-4d4b-a439-60fa987fe2b8}",
        "group": "Drag-and-drop options",
        "visible": true,
        "optional": true,
        "enabled": false,
        "tooltip": "Optionally set the SimPEG group to which results will be saved."
    },
    "ga_group": "",
    "generate_sweep": {
        "label": "Generate sweep file",
        "group": "Python run preferences",
        "main": true,
        "value": false,
        "tooltip": "Generates a file for sweeping parameters instead of running the application."
    },
    "distributed_workers": ""
}
